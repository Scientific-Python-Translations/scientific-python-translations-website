---
title: "Frequently Asked Questions"
draft: false
---


##### What is the scope for the content to be translated?

We'd like to see translations the brochure websites for each of the
10 [Scientific Python Core Projects](https://scientific-python.org/specs/core-projects/).
By a brochure website, we mean the main landing page for the project plus subpages
containing basic information about the project. Technical content such as API documentation
and tutorials is considered to be out of scope.

For example, for https://numpy.org/, the pages translated include

* The landing page, which provides:
  * A concise overview of what NumPy does. 
  * An interactive shell letting users try NumPy in the browser.
  * Lists of other projects in the NumPy ecosystem with brief descriptions.
  * Links to case studies showing how NumPy can be used in real world projects.
  * Links to informational subpages.
* Install: An overview of how to install NumPy
* Learn: Links to educational resources for leaning about NumPy.
* Community: Information on places to participate in NumPy community.
* About us: Information on the people and institutions behind NumPy.
* News: Regular updates about NumPy releases and other important news related to NumPy.
* Contribute: How to get started contributing to NumPy in various technical and nontechnical ways.
* Case Studies: Examples showing how NumPy is used in real world projects.
* Other: Miscellaneous small pages: how to cite NumPy, user surveys, where to ask for help, link to press kit.

##### Why not translate technical documentation?
Though technical documentation is highly valuable, adding it to the scope would greatly increase the amount of
work involved, both upfront and on an ongoing basis. There would not just be an increase in the amount of content
to translate, but technical documentation is more liable to change due to the addition of new features, deprecations,
clarifications in response to user comments made through issues, among other things. The content selected for
translation should be chosen from things which contain general information and are relatively stable.

Translating the core content from a project's brochure website should be at most 1-2 days of work, offering a low
barrier to getting started. The hope however is that this could be the first step towards building active and
thriving translator communities which may become strong enough to take the more ambitious project of translating
technical documentation.
        
##### How useful are these translations?
Although the scope of translated content is limited, these translations are still valuable. It is valuable to be able to
see, at a glance, the general idea of what a project does and how it fits into the ecosystem. It requires an investment
of time and energy to learn a project whose community is made up of speakers of a language you ware unfamiliar with. Being
able to quickly identify what a project is useful for, helps potential users identify whether they should invest more time
in learning that project. Also, having official translations helps with inclusivity, it sends a message that we'd like
non-English speakers to use and get involved with these packages.

##### Why are machine translations not sufficient?
Machine translations can struggle with the technical language and jargon of scientific computing. This was observed in
the project to translate the NumPy webpage for instance. Machine translations are a great starting point, and help make
work easier for translators, but for content of this nature we've found having a human in the loop is needed to ensure
a consistent, quality product.

##### What languages would be involved?
Languages with a large populations of speakers with no to low
English proficiency should be priortized in order to maximize the impact per amount of work. Any language with enthusiastic
translators who are committed to keeping translations up to date can be considered though.

Some resources to help priortize.
https://www.ef.edu/epi/ contains information
on the levels of English proficiency among different countries, https://en.wikipedia.org/wiki/List_of_languages_by_total_number_of_speakers ranks languages by number of speakers, and https://languagerc.net/languages-by-countries/ language by countries.

##### What platform will be used for managing translations?
We are using [Crowdin](https://crowdin.com/) to manage translations. They have generously offered a free supported enterprise
account to help us in this work. Crowdin offers convenient [GitHub integration](https://support.crowdin.com/github-integration/)
which makes it easier to keep translations up to date, provides a convenient user interface for translators and proofreaders
which integrates machine translations.

##### Where will translations be published?
Similar to https://numpy.org, we hope to have the translations published directly on the core project webpages, with some
convenient means of switching between, such as the drop-down selector for the NumPy page.

##### What work is expected from project maintainers?
We intend to minimize the work required from project maintainers. This project would not be viable if it required substantial
effort from maintainers of individual projects. The plan is for a small team of paid [Quansight Labs](https://labs.quansight.org/)
staff to work on setting up translation infrastructure, recruiting and coordinating with translators, and helping integrate translations into core project websites.

If maintainers of a core project agree to participate, we will create a github repository
in the [Scientific Python Translations](https://github.com/Scientific-Python-Translations)
organization which mirrors the content of brochure website. Here is such a [website for Pandas](https://github.com/Scientific-Python-Translations/pandas-translations) for example. This
repository will be synced with Crowdin, which provides a UI for translators. Project 
maintainers do not need to have any involvement in working with translators or any part
of the translation process, though individual maintainers are welcome to participate if
interested.

The goal is to produce repositories which contain parallel versions of core website
content in various languages which are kept up to date by a robust community of
volunteer translators. Project maintainers would need to discuss and agree on the
manner in which translated content should be included in their website. After things
are settled down, a software engineer from Quansight will submit a pull request adding
translations to the core website. To avoid the need for maintainers to need to follow
up reviewing pull requests with updates to translations, the translations could be
pulled down from the external repo at build time.

 is this work supported?
This work is supported by the CZI Scientific Python Community and Communications Infrastructure Grant. https://scientific-python.org/doc/scientific-python-community-and-communications-infrastructure-2022.pdf


##### What are the plans for keeping translations up to date?
The goal is to build a robust translator community. I need to have evidence to back up
that this is possible. People would like to contribute translations for the same
reasons 

##### How will the quality of translations be verified?
For each language, we will find one or more admins, who we vet personally and trust to
verify the integrity of the translations.


